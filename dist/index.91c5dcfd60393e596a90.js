"use strict";(self.webpackChunkunit_demo_cra=self.webpackChunkunit_demo_cra||[]).push([[826],{9599:(n,r,e)=>{e(5466);var t=e(6116),s=e(8041),i=e(2429),o=e(9640),A=e(3202),a=e(8710),d=e(3823);function c(){return(0,d.jsxs)("div",{children:[(0,d.jsxs)("nav",{children:[(0,d.jsx)(i.rU,{"data-testid":"link-home",to:"/",children:"Home"}),(0,d.jsx)(i.rU,{to:"/about",children:"About"})]}),(0,d.jsxs)(o.rs,{children:[(0,d.jsx)(o.AW,{path:"/about",children:(0,d.jsx)(A.C,{})}),(0,d.jsx)(o.AW,{path:"/",children:(0,d.jsx)(a.S,{})})]})]})}var l=e(3379),h=e.n(l),u=e(7795),p=e.n(u),x=e(569),g=e.n(x),m=e(3565),E=e.n(m),j=e(9216),C=e.n(j),b=e(4589),B=e.n(b),v=e(1424),k={};k.styleTagTransform=B(),k.setAttributes=E(),k.insert=g().bind(null,"head"),k.domAPI=p(),k.insertStyleElement=C(),h()(v.Z,k),v.Z&&v.Z.locals&&v.Z.locals;var f=(0,e(3895).N2)();t.render((0,d.jsx)(i.VK,{children:(0,d.jsx)(s.zt,{store:f,children:(0,d.jsx)(c,{})})}),document.getElementById("root"))},1424:(n,r,e)=>{e.d(r,{Z:()=>A});var t=e(4216),s=e.n(t),i=e(5354),o=e.n(i)()(s());o.push([n.id,"body {\r\n  padding: 20px;\r\n}\r\n\r\ninput,\r\na {\r\n  margin-right: 8px;\r\n}\r\n\r\n.done {\r\n  text-decoration: line-through;\r\n}\r\n\r\n.list {\r\n  margin-top: 12px;\r\n}\r\n","",{version:3,sources:["webpack://./src/index.css"],names:[],mappings:"AAAA;EACE,aAAa;AACf;;AAEA;;EAEE,iBAAiB;AACnB;;AAEA;EACE,6BAA6B;AAC/B;;AAEA;EACE,gBAAgB;AAClB",sourcesContent:["body {\r\n  padding: 20px;\r\n}\r\n\r\ninput,\r\na {\r\n  margin-right: 8px;\r\n}\r\n\r\n.done {\r\n  text-decoration: line-through;\r\n}\r\n\r\n.list {\r\n  margin-top: 12px;\r\n}\r\n"],sourceRoot:""}]);const A=o}},n=>{n.O(0,[429,268,74,974,699,401],(()=>(9599,n(n.s=9599)))),n.O()}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguYzk1MzQ0NjRkNmM2NTg2OGYwNzIuanMiLCJtYXBwaW5ncyI6IitMQU1PLFNBQVNBLElBQ2QsT0FDRSw0QkFDRSw0QkFDRSxTQUFDLEtBQUksQ0FBQyxjQUFZLFlBQVlDLEdBQUcsSUFBRyxtQkFDcEMsU0FBQyxLQUFJLENBQUNBLEdBQUcsU0FBUSx1QkFFbkIsVUFBQyxLQUFNLFlBQ0wsU0FBQyxLQUFLLENBQUNDLEtBQUssU0FBUSxVQUNsQixTQUFDQyxFQUFBLEVBQUssT0FFUixTQUFDLEtBQUssQ0FBQ0QsS0FBSyxJQUFHLFVBQ2IsU0FBQ0UsRUFBQSxFQUFJLFdBS2YsQywrSENaSUMsRUFBVSxDQUFDLEVBRWZBLEVBQVFDLGtCQUFvQixJQUM1QkQsRUFBUUUsY0FBZ0IsSUFFbEJGLEVBQVFHLE9BQVMsU0FBYyxLQUFNLFFBRTNDSCxFQUFRSSxPQUFTLElBQ2pCSixFQUFRSyxtQkFBcUIsSUFFaEIsSUFBSSxJQUFTTCxHQUtKLEtBQVcsWUFBaUIsVyxJQ2xCNUNNLEdBQVFDLEUsUUFBQUEsTUFFZEMsRUFBQUEsUUFDRSxTQUFDLEtBQWEsV0FDWixTQUFDLEtBQVEsQ0FBQ0YsTUFBT0EsRUFBTSxVQUNyQixTQUFDWCxFQUFXLFFBR2hCYyxTQUFTQyxlQUFlLFEsbUVDYnRCQyxFLE1BQTBCLEdBQTRCLEtBRTFEQSxFQUF3QkMsS0FBSyxDQUFDQyxFQUFPQyxHQUFJLDJMQUE0TCxHQUFHLENBQUMsUUFBVSxFQUFFLFFBQVUsQ0FBQyw2QkFBNkIsTUFBUSxHQUFHLFNBQVcsK0ZBQStGLGVBQWlCLENBQUMsNExBQTRMLFdBQWEsTUFFN21CLFMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly91bml0LWRlbW8tY3JhLy4vc3JjL0FwcGxpY2F0aW9uLmpzIiwid2VicGFjazovL3VuaXQtZGVtby1jcmEvLi9zcmMvaW5kZXguY3NzP2NmZTQiLCJ3ZWJwYWNrOi8vdW5pdC1kZW1vLWNyYS8uL3NyYy9pbmRleC5qcyIsIndlYnBhY2s6Ly91bml0LWRlbW8tY3JhLy4vc3JjL2luZGV4LmNzcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xyXG5pbXBvcnQgeyBTd2l0Y2gsIFJvdXRlLCBMaW5rIH0gZnJvbSAncmVhY3Qtcm91dGVyLWRvbSc7XHJcblxyXG5pbXBvcnQgeyBBYm91dCB9IGZyb20gJy4vcGFnZXMvQWJvdXQnO1xyXG5pbXBvcnQgeyBIb21lIH0gZnJvbSAnLi9wYWdlcy9Ib21lJztcclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBBcHBsaWNhdGlvbigpIHtcclxuICByZXR1cm4gKFxyXG4gICAgPGRpdj5cclxuICAgICAgPG5hdj5cclxuICAgICAgICA8TGluayBkYXRhLXRlc3RpZD1cImxpbmstaG9tZVwiIHRvPVwiL1wiPkhvbWU8L0xpbms+XHJcbiAgICAgICAgPExpbmsgdG89XCIvYWJvdXRcIj5BYm91dDwvTGluaz5cclxuICAgICAgPC9uYXY+XHJcbiAgICAgIDxTd2l0Y2g+XHJcbiAgICAgICAgPFJvdXRlIHBhdGg9XCIvYWJvdXRcIj5cclxuICAgICAgICAgIDxBYm91dCAvPlxyXG4gICAgICAgIDwvUm91dGU+XHJcbiAgICAgICAgPFJvdXRlIHBhdGg9XCIvXCI+XHJcbiAgICAgICAgICA8SG9tZSAvPlxyXG4gICAgICAgIDwvUm91dGU+XHJcbiAgICAgIDwvU3dpdGNoPlxyXG4gICAgPC9kaXY+XHJcbiAgKTtcclxufVxyXG4iLCJcbiAgICAgIGltcG9ydCBBUEkgZnJvbSBcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanNcIjtcbiAgICAgIGltcG9ydCBkb21BUEkgZnJvbSBcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZURvbUFQSS5qc1wiO1xuICAgICAgaW1wb3J0IGluc2VydEZuIGZyb20gXCIhLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0QnlTZWxlY3Rvci5qc1wiO1xuICAgICAgaW1wb3J0IHNldEF0dHJpYnV0ZXMgZnJvbSBcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXMuanNcIjtcbiAgICAgIGltcG9ydCBpbnNlcnRTdHlsZUVsZW1lbnQgZnJvbSBcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRTdHlsZUVsZW1lbnQuanNcIjtcbiAgICAgIGltcG9ydCBzdHlsZVRhZ1RyYW5zZm9ybUZuIGZyb20gXCIhLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVUYWdUcmFuc2Zvcm0uanNcIjtcbiAgICAgIGltcG9ydCBjb250ZW50LCAqIGFzIG5hbWVkRXhwb3J0IGZyb20gXCIhIS4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vaW5kZXguY3NzXCI7XG4gICAgICBcbiAgICAgIFxuXG52YXIgb3B0aW9ucyA9IHt9O1xuXG5vcHRpb25zLnN0eWxlVGFnVHJhbnNmb3JtID0gc3R5bGVUYWdUcmFuc2Zvcm1Gbjtcbm9wdGlvbnMuc2V0QXR0cmlidXRlcyA9IHNldEF0dHJpYnV0ZXM7XG5cbiAgICAgIG9wdGlvbnMuaW5zZXJ0ID0gaW5zZXJ0Rm4uYmluZChudWxsLCBcImhlYWRcIik7XG4gICAgXG5vcHRpb25zLmRvbUFQSSA9IGRvbUFQSTtcbm9wdGlvbnMuaW5zZXJ0U3R5bGVFbGVtZW50ID0gaW5zZXJ0U3R5bGVFbGVtZW50O1xuXG52YXIgdXBkYXRlID0gQVBJKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5cblxuZXhwb3J0ICogZnJvbSBcIiEhLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9pbmRleC5jc3NcIjtcbiAgICAgICBleHBvcnQgZGVmYXVsdCBjb250ZW50ICYmIGNvbnRlbnQubG9jYWxzID8gY29udGVudC5sb2NhbHMgOiB1bmRlZmluZWQ7XG4iLCJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xyXG5pbXBvcnQgUmVhY3RET00gZnJvbSAncmVhY3QtZG9tJztcclxuaW1wb3J0IHsgUHJvdmlkZXIgfSBmcm9tICdyZWFjdC1yZWR1eCc7XHJcbmltcG9ydCB7IEJyb3dzZXJSb3V0ZXIgfSBmcm9tICdyZWFjdC1yb3V0ZXItZG9tJztcclxuaW1wb3J0IHsgQXBwbGljYXRpb24gfSBmcm9tICcuL0FwcGxpY2F0aW9uJztcclxuaW1wb3J0ICcuL2luZGV4LmNzcyc7XHJcbmltcG9ydCB7IGluaXRTdG9yZSB9IGZyb20gJy4vc3RvcmUnO1xyXG5cclxuY29uc3Qgc3RvcmUgPSBpbml0U3RvcmUoKTtcclxuXHJcblJlYWN0RE9NLnJlbmRlcihcclxuICA8QnJvd3NlclJvdXRlcj5cclxuICAgIDxQcm92aWRlciBzdG9yZT17c3RvcmV9PlxyXG4gICAgICA8QXBwbGljYXRpb24gLz5cclxuICAgIDwvUHJvdmlkZXI+XHJcbiAgPC9Ccm93c2VyUm91dGVyPixcclxuICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgncm9vdCcpLFxyXG4pO1xyXG4iLCIvLyBJbXBvcnRzXG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyBmcm9tIFwiLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL3NvdXJjZU1hcHMuanNcIjtcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18gZnJvbSBcIi4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanNcIjtcbnZhciBfX19DU1NfTE9BREVSX0VYUE9SVF9fXyA9IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyhfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fKTtcbi8vIE1vZHVsZVxuX19fQ1NTX0xPQURFUl9FWFBPUlRfX18ucHVzaChbbW9kdWxlLmlkLCBcImJvZHkge1xcclxcbiAgcGFkZGluZzogMjBweDtcXHJcXG59XFxyXFxuXFxyXFxuaW5wdXQsXFxyXFxuYSB7XFxyXFxuICBtYXJnaW4tcmlnaHQ6IDhweDtcXHJcXG59XFxyXFxuXFxyXFxuLmRvbmUge1xcclxcbiAgdGV4dC1kZWNvcmF0aW9uOiBsaW5lLXRocm91Z2g7XFxyXFxufVxcclxcblxcclxcbi5saXN0IHtcXHJcXG4gIG1hcmdpbi10b3A6IDEycHg7XFxyXFxufVxcclxcblwiLCBcIlwiLHtcInZlcnNpb25cIjozLFwic291cmNlc1wiOltcIndlYnBhY2s6Ly8uL3NyYy9pbmRleC5jc3NcIl0sXCJuYW1lc1wiOltdLFwibWFwcGluZ3NcIjpcIkFBQUE7RUFDRSxhQUFhO0FBQ2Y7O0FBRUE7O0VBRUUsaUJBQWlCO0FBQ25COztBQUVBO0VBQ0UsNkJBQTZCO0FBQy9COztBQUVBO0VBQ0UsZ0JBQWdCO0FBQ2xCXCIsXCJzb3VyY2VzQ29udGVudFwiOltcImJvZHkge1xcclxcbiAgcGFkZGluZzogMjBweDtcXHJcXG59XFxyXFxuXFxyXFxuaW5wdXQsXFxyXFxuYSB7XFxyXFxuICBtYXJnaW4tcmlnaHQ6IDhweDtcXHJcXG59XFxyXFxuXFxyXFxuLmRvbmUge1xcclxcbiAgdGV4dC1kZWNvcmF0aW9uOiBsaW5lLXRocm91Z2g7XFxyXFxufVxcclxcblxcclxcbi5saXN0IHtcXHJcXG4gIG1hcmdpbi10b3A6IDEycHg7XFxyXFxufVxcclxcblwiXSxcInNvdXJjZVJvb3RcIjpcIlwifV0pO1xuLy8gRXhwb3J0c1xuZXhwb3J0IGRlZmF1bHQgX19fQ1NTX0xPQURFUl9FWFBPUlRfX187XG4iXSwibmFtZXMiOlsiQXBwbGljYXRpb24iLCJ0byIsInBhdGgiLCJBYm91dCIsIkhvbWUiLCJvcHRpb25zIiwic3R5bGVUYWdUcmFuc2Zvcm0iLCJzZXRBdHRyaWJ1dGVzIiwiaW5zZXJ0IiwiZG9tQVBJIiwiaW5zZXJ0U3R5bGVFbGVtZW50Iiwic3RvcmUiLCJpbml0U3RvcmUiLCJSZWFjdERPTSIsImRvY3VtZW50IiwiZ2V0RWxlbWVudEJ5SWQiLCJfX19DU1NfTE9BREVSX0VYUE9SVF9fXyIsInB1c2giLCJtb2R1bGUiLCJpZCJdLCJzb3VyY2VSb290IjoiIn0=