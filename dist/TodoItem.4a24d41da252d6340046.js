(()=>{var e,t={6301:(e,t,r)=>{"use strict";r.d(t,{P:()=>E});var n=r(5466),o=r(8041),i=r(3895),a=r(9999),c=r(3379),s=r.n(c),u=r(7795),l=r.n(u),d=r(569),f=r.n(d),p=r(3565),b=r.n(p),v=r(9216),y=r.n(v),m=r(4589),h=r.n(m),O=r(6017),g={};g.styleTagTransform=h(),g.setAttributes=b(),g.insert=f().bind(null,"head"),g.domAPI=l(),g.insertStyleElement=y(),s()(O.Z,g);const j=O.Z&&O.Z.locals?O.Z.locals:void 0;var x=r(3823),E=function(e){var t=e.index,r=(0,o.I0)(),c=(0,o.v9)((function(e){return e.items[t]})),s=(0,o.v9)((function(e){return e.done[t]})),u=(0,n.useCallback)((function(){return r((0,i.j0)(t,!s))}),[t,s,r]);return(0,x.jsx)("div",{"data-testid":a.randomBytes(20),className:j.item,children:(0,x.jsxs)("div",{"data-testid":"list-item",className:s?"done":"",children:[(0,x.jsx)("input",{type:"checkbox",checked:s,onChange:u}),c]})})}},3895:(e,t,r)=>{"use strict";r.d(t,{Hd:()=>d,N2:()=>b,j0:()=>f,jX:()=>l});var n=r(2505);function o(e){return function(e){if(Array.isArray(e))return i(e)}(e)||function(e){if("undefined"!=typeof Symbol&&null!=e[Symbol.iterator]||null!=e["@@iterator"])return Array.from(e)}(e)||function(e,t){if(e){if("string"==typeof e)return i(e,t);var r=Object.prototype.toString.call(e).slice(8,-1);return"Object"===r&&e.constructor&&(r=e.constructor.name),"Map"===r||"Set"===r?Array.from(e):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?i(e,t):void 0}}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function i(e,t){(null==t||t>e.length)&&(t=e.length);for(var r=0,n=new Array(t);r<t;r++)n[r]=e[r];return n}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function c(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){s(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}var u={items:["Позавтракать","Сходить в магазин","Покормить кота"],done:{},text:""},l=function(e){return{type:"ADD_ITEM",text:e}},d=function(e){return{type:"SET_TEXT",text:e}},f=function(e,t){return{type:"SET_DONE",index:e,done:t}},p=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:u,t=arguments.length>1?arguments[1]:void 0;switch(t.type){case"ADD_ITEM":return c(c({},e),{},{text:"",items:[].concat(o(e.items),[t.text])});case"SET_TEXT":return c(c({},e),{},{text:t.text});case"SET_DONE":return c(c({},e),{},{done:c(c({},e.done),{},s({},t.index,t.done))});default:return e}};function b(){return(0,n.MT)(p)}},6017:(e,t,r)=>{"use strict";r.d(t,{Z:()=>c});var n=r(4216),o=r.n(n),i=r(5354),a=r.n(i)()(o());a.push([e.id,".EPk3EXERT5xyM_B8zf0P {\r\n    padding: 0px;\r\n}\r\n","",{version:3,sources:["webpack://./src/components/index.module.css"],names:[],mappings:"AAAA;IACI,YAAY;AAChB",sourcesContent:[".item {\r\n    padding: 0px;\r\n}\r\n"],sourceRoot:""}]),a.locals={item:"EPk3EXERT5xyM_B8zf0P"};const c=a},950:()=>{},6601:()=>{},9214:()=>{},6419:()=>{},6353:()=>{},1932:()=>{},7748:()=>{},5568:()=>{},9386:()=>{},1616:()=>{},6619:()=>{},7108:()=>{}},r={};function n(e){var o=r[e];if(void 0!==o)return o.exports;var i=r[e]={id:e,loaded:!1,exports:{}};return t[e].call(i.exports,i,i.exports,n),i.loaded=!0,i.exports}n.m=t,n.amdO={},e=[],n.O=(t,r,o,i)=>{if(!r){var a=1/0;for(l=0;l<e.length;l++){for(var[r,o,i]=e[l],c=!0,s=0;s<r.length;s++)(!1&i||a>=i)&&Object.keys(n.O).every((e=>n.O[e](r[s])))?r.splice(s--,1):(c=!1,i<a&&(a=i));if(c){e.splice(l--,1);var u=o();void 0!==u&&(t=u)}}return t}i=i||0;for(var l=e.length;l>0&&e[l-1][2]>i;l--)e[l]=e[l-1];e[l]=[r,o,i]},n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var r in t)n.o(t,r)&&!n.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},n.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),n.nmd=e=>(e.paths=[],e.children||(e.children=[]),e),(()=>{var e={497:0};n.O.j=t=>0===e[t];var t=(t,r)=>{var o,i,[a,c,s]=r,u=0;if(a.some((t=>0!==e[t]))){for(o in c)n.o(c,o)&&(n.m[o]=c[o]);if(s)var l=s(n)}for(t&&t(r);u<a.length;u++)i=a[u],n.o(e,i)&&e[i]&&e[i][0](),e[i]=0;return n.O(l)},r=self.webpackChunkunit_demo_cra=self.webpackChunkunit_demo_cra||[];r.forEach(t.bind(null,0)),r.push=t.bind(null,r.push.bind(r))})(),n.nc=void 0;var o=n.O(void 0,[401],(()=>n(6301)));o=n.O(o)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,