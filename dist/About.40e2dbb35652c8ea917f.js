/*! For license information please see About.40e2dbb35652c8ea917f.js.LICENSE.txt */
(()=>{"use strict";var e,r={7347:e=>{var r=Object.getOwnPropertySymbols,t=Object.prototype.hasOwnProperty,n=Object.prototype.propertyIsEnumerable;function o(e){if(null==e)throw new TypeError("Object.assign cannot be called with null or undefined");return Object(e)}e.exports=function(){try{if(!Object.assign)return!1;var e=new String("abc");if(e[5]="de","5"===Object.getOwnPropertyNames(e)[0])return!1;for(var r={},t=0;t<10;t++)r["_"+String.fromCharCode(t)]=t;if("0123456789"!==Object.getOwnPropertyNames(r).map((function(e){return r[e]})).join(""))return!1;var n={};return"abcdefghijklmnopqrst".split("").forEach((function(e){n[e]=e})),"abcdefghijklmnopqrst"===Object.keys(Object.assign({},n)).join("")}catch(e){return!1}}()?Object.assign:function(e,u){for(var i,a,f=o(e),c=1;c<arguments.length;c++){for(var l in i=Object(arguments[c]))t.call(i,l)&&(f[l]=i[l]);if(r){a=r(i);for(var s=0;s<a.length;s++)n.call(i,a[s])&&(f[a[s]]=i[a[s]])}}return f}},4043:(e,r,t)=>{t(7347);var n=t(5466),o=60103;if(r.Fragment=60107,"function"==typeof Symbol&&Symbol.for){var u=Symbol.for;o=u("react.element"),r.Fragment=u("react.fragment")}var i=n.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,a=Object.prototype.hasOwnProperty,f={key:!0,ref:!0,__self:!0,__source:!0};function c(e,r,t){var n,u={},c=null,l=null;for(n in void 0!==t&&(c=""+t),void 0!==r.key&&(c=""+r.key),void 0!==r.ref&&(l=r.ref),r)a.call(r,n)&&!f.hasOwnProperty(n)&&(u[n]=r[n]);if(e&&e.defaultProps)for(n in r=e.defaultProps)void 0===u[n]&&(u[n]=r[n]);return{$$typeof:o,type:e,key:c,ref:l,props:u,_owner:i.current}}r.jsx=c,r.jsxs=c},6751:(e,r,t)=>{function n(e){return n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},n(e)}var o=t(7347),u=60103,i=60106;r.Fragment=60107,r.StrictMode=60108,r.Profiler=60114;var a=60109,f=60110,c=60112;r.Suspense=60113;var l=60115,s=60116;if("function"==typeof Symbol&&Symbol.for){var p=Symbol.for;u=p("react.element"),i=p("react.portal"),r.Fragment=p("react.fragment"),r.StrictMode=p("react.strict_mode"),r.Profiler=p("react.profiler"),a=p("react.provider"),f=p("react.context"),c=p("react.forward_ref"),r.Suspense=p("react.suspense"),l=p("react.memo"),s=p("react.lazy")}var y="function"==typeof Symbol&&Symbol.iterator;function d(e){for(var r="https://reactjs.org/docs/error-decoder.html?invariant="+e,t=1;t<arguments.length;t++)r+="&args[]="+encodeURIComponent(arguments[t]);return"Minified React error #"+e+"; visit "+r+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}var v={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},h={};function _(e,r,t){this.props=e,this.context=r,this.refs=h,this.updater=t||v}function b(){}function m(e,r,t){this.props=e,this.context=r,this.refs=h,this.updater=t||v}_.prototype.isReactComponent={},_.prototype.setState=function(e,r){if("object"!==n(e)&&"function"!=typeof e&&null!=e)throw Error(d(85));this.updater.enqueueSetState(this,e,r,"setState")},_.prototype.forceUpdate=function(e){this.updater.enqueueForceUpdate(this,e,"forceUpdate")},b.prototype=_.prototype;var g=m.prototype=new b;g.constructor=m,o(g,_.prototype),g.isPureReactComponent=!0;var O={current:null},w=Object.prototype.hasOwnProperty,j={key:!0,ref:!0,__self:!0,__source:!0};function S(e,r,t){var n,o={},i=null,a=null;if(null!=r)for(n in void 0!==r.ref&&(a=r.ref),void 0!==r.key&&(i=""+r.key),r)w.call(r,n)&&!j.hasOwnProperty(n)&&(o[n]=r[n]);var f=arguments.length-2;if(1===f)o.children=t;else if(1<f){for(var c=Array(f),l=0;l<f;l++)c[l]=arguments[l+2];o.children=c}if(e&&e.defaultProps)for(n in f=e.defaultProps)void 0===o[n]&&(o[n]=f[n]);return{$$typeof:u,type:e,key:i,ref:a,props:o,_owner:O.current}}function k(e){return"object"===n(e)&&null!==e&&e.$$typeof===u}var E=/\/+/g;function C(e,r){return"object"===n(e)&&null!==e&&null!=e.key?function(e){var r={"=":"=0",":":"=2"};return"$"+e.replace(/[=:]/g,(function(e){return r[e]}))}(""+e.key):r.toString(36)}function $(e,r,t,o,a){var f=n(e);"undefined"!==f&&"boolean"!==f||(e=null);var c=!1;if(null===e)c=!0;else switch(f){case"string":case"number":c=!0;break;case"object":switch(e.$$typeof){case u:case i:c=!0}}if(c)return a=a(c=e),e=""===o?"."+C(c,0):o,Array.isArray(a)?(t="",null!=e&&(t=e.replace(E,"$&/")+"/"),$(a,r,t,"",(function(e){return e}))):null!=a&&(k(a)&&(a=function(e,r){return{$$typeof:u,type:e.type,key:r,ref:e.ref,props:e.props,_owner:e._owner}}(a,t+(!a.key||c&&c.key===a.key?"":(""+a.key).replace(E,"$&/")+"/")+e)),r.push(a)),1;if(c=0,o=""===o?".":o+":",Array.isArray(e))for(var l=0;l<e.length;l++){var s=o+C(f=e[l],l);c+=$(f,r,t,s,a)}else if(s=function(e){return null===e||"object"!==n(e)?null:"function"==typeof(e=y&&e[y]||e["@@iterator"])?e:null}(e),"function"==typeof s)for(e=s.call(e),l=0;!(f=e.next()).done;)c+=$(f=f.value,r,t,s=o+C(f,l++),a);else if("object"===f)throw r=""+e,Error(d(31,"[object Object]"===r?"object with keys {"+Object.keys(e).join(", ")+"}":r));return c}function R(e,r,t){if(null==e)return e;var n=[],o=0;return $(e,n,"","",(function(e){return r.call(t,e,o++)})),n}function P(e){if(-1===e._status){var r=e._result;r=r(),e._status=0,e._result=r,r.then((function(r){0===e._status&&(r=r.default,e._status=1,e._result=r)}),(function(r){0===e._status&&(e._status=2,e._result=r)}))}if(1===e._status)return e._result;throw e._result}var x={current:null};function A(){var e=x.current;if(null===e)throw Error(d(321));return e}var F={ReactCurrentDispatcher:x,ReactCurrentBatchConfig:{transition:0},ReactCurrentOwner:O,IsSomeRendererActing:{current:!1},assign:o};r.Children={map:R,forEach:function(e,r,t){R(e,(function(){r.apply(this,arguments)}),t)},count:function(e){var r=0;return R(e,(function(){r++})),r},toArray:function(e){return R(e,(function(e){return e}))||[]},only:function(e){if(!k(e))throw Error(d(143));return e}},r.Component=_,r.PureComponent=m,r.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=F,r.cloneElement=function(e,r,t){if(null==e)throw Error(d(267,e));var n=o({},e.props),i=e.key,a=e.ref,f=e._owner;if(null!=r){if(void 0!==r.ref&&(a=r.ref,f=O.current),void 0!==r.key&&(i=""+r.key),e.type&&e.type.defaultProps)var c=e.type.defaultProps;for(l in r)w.call(r,l)&&!j.hasOwnProperty(l)&&(n[l]=void 0===r[l]&&void 0!==c?c[l]:r[l])}var l=arguments.length-2;if(1===l)n.children=t;else if(1<l){c=Array(l);for(var s=0;s<l;s++)c[s]=arguments[s+2];n.children=c}return{$$typeof:u,type:e.type,key:i,ref:a,props:n,_owner:f}},r.createContext=function(e,r){return void 0===r&&(r=null),(e={$$typeof:f,_calculateChangedBits:r,_currentValue:e,_currentValue2:e,_threadCount:0,Provider:null,Consumer:null}).Provider={$$typeof:a,_context:e},e.Consumer=e},r.createElement=S,r.createFactory=function(e){var r=S.bind(null,e);return r.type=e,r},r.createRef=function(){return{current:null}},r.forwardRef=function(e){return{$$typeof:c,render:e}},r.isValidElement=k,r.lazy=function(e){return{$$typeof:s,_payload:{_status:-1,_result:e},_init:P}},r.memo=function(e,r){return{$$typeof:l,type:e,compare:void 0===r?null:r}},r.useCallback=function(e,r){return A().useCallback(e,r)},r.useContext=function(e,r){return A().useContext(e,r)},r.useDebugValue=function(){},r.useEffect=function(e,r){return A().useEffect(e,r)},r.useImperativeHandle=function(e,r,t){return A().useImperativeHandle(e,r,t)},r.useLayoutEffect=function(e,r){return A().useLayoutEffect(e,r)},r.useMemo=function(e,r){return A().useMemo(e,r)},r.useReducer=function(e,r,t){return A().useReducer(e,r,t)},r.useRef=function(e){return A().useRef(e)},r.useState=function(e){return A().useState(e)},r.version="17.0.2"},5466:(e,r,t)=>{e.exports=t(6751)},3823:(e,r,t)=>{e.exports=t(4043)},3202:(e,r,t)=>{t.d(r,{C:()=>o}),t(5466);var n=t(3823),o=function(){return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)("h1",{"data-testid":"page-title",children:"About"}),(0,n.jsx)("p",{children:"This is an example application."})]})}}},t={};function n(e){var o=t[e];if(void 0!==o)return o.exports;var u=t[e]={id:e,exports:{}};return r[e](u,u.exports,n),u.exports}n.m=r,e=[],n.O=(r,t,o,u)=>{if(!t){var i=1/0;for(l=0;l<e.length;l++){for(var[t,o,u]=e[l],a=!0,f=0;f<t.length;f++)(!1&u||i>=u)&&Object.keys(n.O).every((e=>n.O[e](t[f])))?t.splice(f--,1):(a=!1,u<i&&(i=u));if(a){e.splice(l--,1);var c=o();void 0!==c&&(r=c)}}return r}u=u||0;for(var l=e.length;l>0&&e[l-1][2]>u;l--)e[l]=e[l-1];e[l]=[t,o,u]},n.n=e=>{var r=e&&e.__esModule?()=>e.default:()=>e;return n.d(r,{a:r}),r},n.d=(e,r)=>{for(var t in r)n.o(r,t)&&!n.o(e,t)&&Object.defineProperty(e,t,{enumerable:!0,get:r[t]})},n.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),n.o=(e,r)=>Object.prototype.hasOwnProperty.call(e,r),(()=>{var e={74:0};n.O.j=r=>0===e[r];var r=(r,t)=>{var o,u,[i,a,f]=t,c=0;if(i.some((r=>0!==e[r]))){for(o in a)n.o(a,o)&&(n.m[o]=a[o]);if(f)var l=f(n)}for(r&&r(t);c<i.length;c++)u=i[c],n.o(e,u)&&e[u]&&e[u][0](),e[u]=0;return n.O(l)},t=self.webpackChunkunit_demo_cra=self.webpackChunkunit_demo_cra||[];t.forEach(r.bind(null,0)),t.push=r.bind(null,t.push.bind(t))})();var o=n(3202);o=n.O(o)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,